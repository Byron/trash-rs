name: Rust

on:
  push:
    branches: [ master, dev-v2 ]
  pull_request:
    branches: [ master, dev-v2 ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows, netbsd]
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - build: netbsd
            os: ubuntu-22.04
            target: x86_64-unknown-netbsd

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Use Cross
        shell: bash
        run: |
          cargo install cross
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: cargo test
        if: ${{ !startsWith(matrix.build, 'netbsd') }}
        run: ${{ env.CARGO }} test --verbose ${{ env.TARGET_FLAGS }}

      - name: cargo test (without chrono)
        if: ${{ !startsWith(matrix.build, 'netbsd') }}
        run: ${{ env.CARGO }} test --verbose --no-default-features --features coinit_apartmentthreaded ${{ env.TARGET_FLAGS }}

      - name: cargo build
        if: ${{ startsWith(matrix.build, 'netbsd') }}
        run: ${{ env.CARGO }} build --verbose ${{ env.TARGET_FLAGS }}

      - name: cargo build (without chrono)
        if: ${{ startsWith(matrix.build, 'netbsd') }}
        run: ${{ env.CARGO }} build --verbose --no-default-features --features coinit_apartmentthreaded ${{ env.TARGET_FLAGS }}

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
